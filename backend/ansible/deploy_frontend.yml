- name: Configure webserver
  hosts: webservers
  remote_user: root
  become: yes
  become_method: sudo

  tasks:
    - name: Copy frontend files
      copy:
        src: /var/lib/jenkins/workspace/Resume/frontend/
        dest: /srv/frontend/
        force: true

    - name: Set frontend folder permissions
      file:
        path: /srv/frontend
        recurse: yes
        mode: "0770"
        owner: www-data
        group: www-data

    - name: Copy nginx.conf
      copy:
        src: /var/lib/jenkins/workspace/Resume/backend/nginx.conf
        dest: /etc/nginx
        force: true
      notify:
        - Reload nginx

    - name: Copy flaskapp.service
      copy:
        src: /var/lib/jenkins/workspace/Resume/backend/flaskapp.service
        dest: /etc/systemd/system
        force: true
      notify:
        - Run flaskapp service

    - name: Reload systemctl daemon
      command:
        cmd: systemctl daemon-reload

    - name: Install pip
      apt:
        name: python3-pip
        state: present

    - name: Install Flask
      pip:
        name: flask
        state: present

    - name: Install uwsgi
      pip:
        name: uwsgi
        state: present

    - name: Install nfs-common package
      apt:
        name: nfs-common
        state: present

    - name: Mount NFS share
      mount:
        name: /mnt/nfs
        src: "192.168.69.200:/volume1/resume-db"
        fstype: nfs
        opts: defaults
        state: mounted
      notify:
        - Set permissions on mount point
        - Set permissions on database

  - handlers:
    - name: Set permissions on mount point
      file:
        path: /mnt/nfs
        state: directory
        owner: www-data
        group: www-data
        mode: "0770"

    - name: Set permissions on database
      file:
        path: /mnt/nfs/visitors.db
        owner: www-data
        group: www-data
        mode: "0770"

    - name: Run flaskapp service
      service:
        name: flaskapp
        state: restarted
        enabled: true

    - name: Reload nginx
      service:
        name: nginx
        state: reloaded
        enabled: true
